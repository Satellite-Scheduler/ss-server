name: CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

env:
    PYTHON_VERSION: "3.10"
    POSTGRES_DB: testdb
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres

jobs:
    quality:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-python@v5
              with:
                  python-version: ${{ env.PYTHON_VERSION }}

            - uses: actions/cache@v3
              with:
                  path: |
                      ~/.cache/pip
                      venv/
                  key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
                  restore-keys: |
                      ${{ runner.os }}-pip-
            - name: Install quality tools
              run: |
                  pipx install black flake8 mypy isort safety

            - name: Check formatting
              run: black --check --diff .

            - name: Check typing
              run: mypy app/

            # - name: Lint code
            #   run: flake8 .

            # - name: Check security
            #   run: safety check --full-report

    test:
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:16
                env:
                    POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
                ports: ["5432:5432"]
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-python@v5
              with:
                  python-version: ${{ env.PYTHON_VERSION }}

            - uses: actions/cache@v3
              with:
                  path: |
                      ~/.cache/pip
                      venv/
                  key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
                  restore-keys: |
                      ${{ runner.os }}-pip-

            - name: Install dependencies
              run: |
                  python -m pip install -r requirements.txt
                  pip install -r requirements-dev.txt

            - name: Run tests
              env:
                  DATABASE_URL: postgresql://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@localhost:5432/${{ env.POSTGRES_DB }}
              run: |
                  pytest --cov=./ --cov-report=xml --cov-report=html --cov-fail-under=50 -v
